---
name: Integration Test

on:
  # Run on pushes to `main` and on all pull requests.
  push:
    branches:
      - main
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

env:
  COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.GITHUB_TOKEN }}"}}'

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: "${{ matrix.os }}"

    strategy:
      matrix:
        php:
          - '5.4'
          - '5.5'
          - '5.6'
          - '7.0'
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
          - '8.2'
          - '8.3'
          - '8.4'
          - '8.5'
        composer:
          - 'v2'
        os:
          - 'ubuntu-latest'
          - 'windows-latest'

        exclude:
          # Installing on Windows with PHP 5.4 runs into all sorts of problems (which are not ours).
          # Considering PHP 5.4 is ancient, I deem it acceptable to exclude the Windows PHP 5.4 builds.
          # @link https://github.com/PHPCSStandards/composer-installer/pull/213
          - php: '5.4'
            os: 'windows-latest'

        include:
          # Composer 2.3 drops support for PHP < 7.2, so for PHP 5.4 to 7.1, `v2` will install
          # Composer 2.2, for PHP 7.2 and up, `v2` will install Composer >= 2.3.
          # These builds make sure the Composer 2.2 LTS version is 100% supported for PHP 7.2-8.3.
          # Note: Composer 2.2 is not compatible with PHP 8.4 and it is unlikely that it will be
          # made compatible with PHP 8.4.
          - php: '7.2'
            composer: '2.2'
            os: 'ubuntu-latest'
          - php: '7.3'
            composer: '2.2'
            os: 'ubuntu-latest'
          - php: '7.4'
            composer: '2.2'
            os: 'ubuntu-latest'
          - php: '8.0'
            composer: '2.2'
            os: 'ubuntu-latest'
          - php: '8.1'
            composer: '2.2'
            os: 'ubuntu-latest'
          - php: '8.2'
            composer: '2.2'
            os: 'ubuntu-latest'
          - php: '8.3'
            composer: '2.2'
            os: 'ubuntu-latest'

          - php: '7.2'
            composer: '2.2'
            os: 'windows-latest'
          - php: '7.3'
            composer: '2.2'
            os: 'windows-latest'
          - php: '7.4'
            composer: '2.2'
            os: 'windows-latest'
          - php: '8.0'
            composer: '2.2'
            os: 'windows-latest'
          - php: '8.1'
            composer: '2.2'
            os: 'windows-latest'
          - php: '8.2'
            composer: '2.2'
            os: 'windows-latest'
          - php: '8.3'
            composer: '2.2'
            os: 'windows-latest'

          # Also test against the dev version of Composer for early warning about upcoming changes.
          - php: 'latest'
            composer: 'snapshot'
            os: 'ubuntu-latest'

          - php: 'latest'
            composer: 'snapshot'
            os: 'windows-latest'

    name: "Integration test"

    continue-on-error: ${{ matrix.php == '8.5' || matrix.composer == 'snapshot' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: json, zip
          ini-values: zend.assertions=1, error_reporting=-1, display_errors=On
          tools: "composer:${{ matrix.composer }}"
          coverage: none
        env:
          fail-fast: true

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-php-dependencies-with-composer
      - name: Install Composer dependencies
        if: ${{ matrix.php != '8.5' }}
        uses: "ramsey/composer-install@v3"
        with:
          composer-options: '--optimize-autoloader'
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Install Composer dependencies
        if: ${{ matrix.php == '8.5' }}
        uses: "ramsey/composer-install@v3"
        with:
          composer-options: '--ignore-platform-reqs --optimize-autoloader'
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Run integration tests
        run: vendor/bin/phpunit --no-coverage
